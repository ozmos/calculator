{"version":3,"sources":["components/Equals.js","components/Inputs.js","components/Display.js","components/Container.js","components/Footer.js","functions/calculateString.js","functions/formatString.js","App.js","serviceWorker.js","index.js"],"names":["Equals","props","react_default","a","createElement","className","id","onClick","evaluate","Inputs","digObj","decimal","zero","one","two","three","four","five","six","seven","eight","nine","digits","Object","keys","reverse","map","val","join","value","key","handleClick","opObj","square_root","add","subtract","multiply","divide","modulus","operators","coObj","Clear","Backspace","correctors","components_Equals","Display","display","result","Container","components_Display","components_Inputs","Footer","author","calculateString","str","mathOps","+","x","y","-","*","/","%","split","Number","filter","test","match","i","length","formatString","sqrDigs","dig","Math","sqrt","replace","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","input","bind","assertThisInitialized","upDateInput","handleKeyPress","document","addEventListener","removeEventListener","event","target","innerHTML","includes","btn","pressedBtn","currentInput","setState","concat","slice","console","log","toString","components_Container","components_Footer","React","Component","Boolean","window","location","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d8d3b513.chunk.js","sourcesContent":["import React from 'react';\n\nconst Equals = props => {\n  return (\n    <button className=\"equals button\" id=\"equals\" onClick={props.evaluate}>=</button>\n  );\n}\n\nexport default Equals;","import React from 'react';\nimport Equals from './Equals';\n\nconst Inputs = props => {\n  const digObj = {'decimal': '.', 'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9};\n    const digits = Object.keys(digObj).reverse().map((val) => {\n      return (\n        <button id={val} className={['digit ', 'button ', val].join('')}value={digObj[val]} key={val} onClick={props.handleClick}>{digObj[val]}</button>\n      );\n    });\n\n  const opObj = {'square_root' : '\\u221A', 'add': '+', 'subtract': '-', 'multiply': '*', 'divide': '/', 'modulus': '%'};\n  const operators = Object.keys(opObj).map((val) => {\n    return (\n      <button className={['button ', 'operator ', val].join('')} id={val} value={opObj[val]} key={val} onClick={props.handleClick}>{opObj[val]}</button>\n    );  \n  });\n\n  const coObj = {'Clear' : 'C', 'Backspace' : '\\u2190'};\n  const correctors = Object.keys(coObj).map((val) => {\n    return (\n      <button className={['button ', 'corrector ', val].join('')} id={val} value={coObj[val]} key={val} onClick={props.handleClick}>{coObj[val]}</button>\n    );  \n  });\n \n  return (\n    <div className=\"inputs\">\n      {correctors}\n      {operators}\n      <Equals evaluate={props.evaluate}/>\n      {digits}\n    </div>\n  );\n}\n\nexport default Inputs;","import React from 'react';\n\nconst Display = props => {\n  return (\n    <div className=\"display\" id=\"display_container\">\n      <div className='input_display' id='display'>\n        <span className='input_span'>{props.display}</span></div>\n      <div className='result' id='result'>\n        <br/>\n        <span className='result_span'>{props.result}</span>\n          </div>\n    </div>\n  );\n}\n\nexport default Display;","import React from 'react';\nimport Inputs from './Inputs';\nimport Display from './Display';\n\nconst Container = props => {\n  return (\n    <div className=\"container\">\n      <Display\n        display={props.display}\n        result={props.result} />\n      <Inputs handleClick={props.handleClick} evaluate={props.evaluate} />\n    </div>\n  );\n}\n\nexport default Container;","import React from 'react';\n\nconst Footer = props => {\n    return (\n        <div className='footer'>\n            <span>{props.author} 2018</span>\n        </div>\n    );\n}\n\nexport default Footer;","function calculateString(str) {\n  const mathOps = {\n    '+': function (x, y) { return x + y },\n    '-': function (x, y) { return x - y },\n    '*': function (x, y) { return x * y },\n    '/': function (x, y) { return x / y },\n    '%': function (x, y) { return x % y }\n  };\n  const digits = str.split(/[^0-9.]+/).map(val => Number(val));\n  const operators = str.split(/\\d+/)\n    .filter(val => /[^0-9.]/.test(val))\n    .map(val => val.match(/.$/));\n  let result = digits[0];\n  for (let i = 0; i < operators.length; i++) {\n\n    result = mathOps[operators[i]](result, digits[i + 1]);\n\n  }\n  return result;\n}\n\nexport default calculateString;","function formatString(str) {\n\t\n\tconst sqrDigs = str.match(/\\u221A\\d+/g);\n\tlet digits = str.match(/(?<=\\u221A)\\d+/g);\n    digits = digits.map(dig => Math.sqrt(dig));\n\tfor (let i = 0; i < digits.length; i++) {\n\t\tstr = str.replace(sqrDigs[i], digits[i]);\n    }\n\treturn str;\n}\n\nexport default formatString;","import React from 'react';\nimport './styles/App.css';\nimport './styles/Container.css';\nimport './styles/Inputs.css'\nimport './styles/variables.css';\nimport './styles/gridAreas.css';\nimport './styles/resets.css';\nimport './styles/Display.css';\nimport './styles/footer.css';\nimport Container from './components/Container';\nimport Footer from './components/Footer';\nimport calculateString from './functions/calculateString';\nimport formatString from './functions/formatString';\n/*\n  todo:\n    [*]Add git repository\n    [*]refactor functions into different components\n    [*]reverse order of numerical buttons\n    [*]add backspace button\n    [*]add modulus\n    [*]add square root\n    [*]link buttons to keyboard events\n*/\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: '0',\n      result: '0',\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.evaluate = this.evaluate.bind(this);\n    this.upDateInput = this.upDateInput.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n  }\n\n  componentDidMount(){\n    document.addEventListener(\"keydown\", this.handleKeyPress, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyPress, false);\n  }\n\n  handleClick(event) {\n    this.upDateInput(event.target.innerHTML);\n  }\n\n  handleKeyPress(event) {\n    const keys = [\"0\", \"9\", \"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\", \"1\", \".\", \"C\", \"Backspace\", \"+\", \"-\", \"*\", \"/\",  \"%\", \"=\", \"Enter\"];\n    if (keys.includes(event.key)) {\n      this.upDateInput(event.key);\n    } else return;\n  }\n\n  upDateInput(btn) {\n    const pressedBtn = btn;\n    const currentInput = this.state.input;\n    switch (pressedBtn) {\n      case '0':\n        currentInput === '0' ?\n          this.setState({\n            input: '0'\n          })\n          : this.setState({\n            input: currentInput.concat(pressedBtn)\n          });\n        break;\n      case '.':\n        /\\.\\d*$/.test(currentInput) ? this.setState({\n          input: currentInput\n        }) : this.setState({\n          input: currentInput.concat(pressedBtn)\n        });\n        break;\n      case '+':\n        /\\+$/.test(currentInput) ? this.setState({\n          input: currentInput\n        }) : this.setState({\n          input: currentInput.concat(pressedBtn)\n        });\n        break;\n      case '-':\n        /-$/.test(currentInput) ? this.setState({\n          input: currentInput\n        }) : this.setState({\n          input: currentInput.concat(pressedBtn)\n        });\n        break;\n      case '*':\n        /\\*$/.test(currentInput) ? this.setState({\n          input: currentInput\n        }) : this.setState({\n          input: currentInput.concat(pressedBtn)\n        });\n        break;\n      case '/':\n        /\\/$/.test(currentInput) ? this.setState({\n          input: currentInput\n        }) : this.setState({\n          input: currentInput.concat(pressedBtn)\n        });\n        break;\n      case 'Backspace':\n      case '\\u2190' :\n        if (currentInput !== '0' && currentInput.length > 1) {\n          this.setState({\n            input: currentInput.slice(0, currentInput.length - 1)\n          });\n        } else {\n          this.setState({\n            input: '0'\n          });\n        }\n        break;\n      case 'C':\n        this.setState({\n          input: '0',\n          result: '0'\n        });\n        break;\n      case '=':\n      case 'Enter':\n      this.evaluate();\n      break;\n      default:\n        currentInput === '0' ?\n          this.setState({\n            input: pressedBtn\n          }) :\n          this.setState({\n            input: currentInput.concat(pressedBtn),\n            result: this.state.result\n          });\n        console.log(btn);  \n    }\n\n  }\n\n  evaluate() {\n    const result = /\\u221A/.test(this.state.input) //omit '0' from unicode U+0221A \n      ? calculateString(formatString(this.state.input))\n      : calculateString(this.state.input);\n    this.setState({\n      result: result\n    });\n    //TODO: refine this to only allow operators to concat result\n    this.setState({\n      input: result.toString()\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Container\n          display={this.state.input}\n          result={this.state.result}\n          handleClick={this.handleClick}\n          evaluate={this.evaluate} />\n        <Footer author=\"Osamu Morozumi\" />  \n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}